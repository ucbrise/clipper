# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import model_pb2 as model__pb2
import prediction_pb2 as prediction__pb2


class ProxyServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.downstream = channel.unary_unary(
        '/prediction.ProxyServer/downstream',
        request_serializer=prediction__pb2.request.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.prepare_recover_successor = channel.unary_unary(
        '/prediction.ProxyServer/prepare_recover_successor',
        request_serializer=prediction__pb2.successor_prepare_req.SerializeToString,
        response_deserializer=prediction__pb2.successor_prepare_reply.FromString,
        )
    self.prepare_recover_predecessor = channel.unary_unary(
        '/prediction.ProxyServer/prepare_recover_predecessor',
        request_serializer=prediction__pb2.recovery_req.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.commit_recover_successor = channel.unary_unary(
        '/prediction.ProxyServer/commit_recover_successor',
        request_serializer=prediction__pb2.recovery_req.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.commit_recover_predecessor = channel.unary_unary(
        '/prediction.ProxyServer/commit_recover_predecessor',
        request_serializer=prediction__pb2.recovery_req.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.recover_new_proxy = channel.unary_unary(
        '/prediction.ProxyServer/recover_new_proxy',
        request_serializer=prediction__pb2.new_proxy_recover_req.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.promote_primary = channel.unary_unary(
        '/prediction.ProxyServer/promote_primary',
        request_serializer=prediction__pb2.new_proxy_recover_req.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.set_primary = channel.unary_unary(
        '/prediction.ProxyServer/set_primary',
        request_serializer=prediction__pb2.proxy_info.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.ping = channel.unary_unary(
        '/prediction.ProxyServer/ping',
        request_serializer=prediction__pb2.ping_req.SerializeToString,
        response_deserializer=prediction__pb2.ping_reply.FromString,
        )
    self.SetModel = channel.unary_unary(
        '/prediction.ProxyServer/SetModel',
        request_serializer=prediction__pb2.modelinfo.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )
    self.SetDAG = channel.unary_unary(
        '/prediction.ProxyServer/SetDAG',
        request_serializer=prediction__pb2.dag.SerializeToString,
        response_deserializer=model__pb2.response.FromString,
        )


class ProxyServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def downstream(self, request, context):
    """
    A proxy calls this method on a downstream proxy to pass its model output as
    request to the downstream.

    Client: Upstream Proxy || The SMR leader.
    Server: Downstream Proxy.

    Input: The passed request. (currently not batched)
    Returns: A simple ACK.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def prepare_recover_successor(self, request, context):
    """
    Failure Recovery RPCs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def prepare_recover_predecessor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def commit_recover_successor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def commit_recover_predecessor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recover_new_proxy(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def promote_primary(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def set_primary(self, request, context):
    """
    An predecessor call this to appoint a stateful downstream replica as primary.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetModel(self, request, context):
    """Called by manager
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetDAG(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProxyServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'downstream': grpc.unary_unary_rpc_method_handler(
          servicer.downstream,
          request_deserializer=prediction__pb2.request.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'prepare_recover_successor': grpc.unary_unary_rpc_method_handler(
          servicer.prepare_recover_successor,
          request_deserializer=prediction__pb2.successor_prepare_req.FromString,
          response_serializer=prediction__pb2.successor_prepare_reply.SerializeToString,
      ),
      'prepare_recover_predecessor': grpc.unary_unary_rpc_method_handler(
          servicer.prepare_recover_predecessor,
          request_deserializer=prediction__pb2.recovery_req.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'commit_recover_successor': grpc.unary_unary_rpc_method_handler(
          servicer.commit_recover_successor,
          request_deserializer=prediction__pb2.recovery_req.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'commit_recover_predecessor': grpc.unary_unary_rpc_method_handler(
          servicer.commit_recover_predecessor,
          request_deserializer=prediction__pb2.recovery_req.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'recover_new_proxy': grpc.unary_unary_rpc_method_handler(
          servicer.recover_new_proxy,
          request_deserializer=prediction__pb2.new_proxy_recover_req.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'promote_primary': grpc.unary_unary_rpc_method_handler(
          servicer.promote_primary,
          request_deserializer=prediction__pb2.new_proxy_recover_req.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'set_primary': grpc.unary_unary_rpc_method_handler(
          servicer.set_primary,
          request_deserializer=prediction__pb2.proxy_info.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'ping': grpc.unary_unary_rpc_method_handler(
          servicer.ping,
          request_deserializer=prediction__pb2.ping_req.FromString,
          response_serializer=prediction__pb2.ping_reply.SerializeToString,
      ),
      'SetModel': grpc.unary_unary_rpc_method_handler(
          servicer.SetModel,
          request_deserializer=prediction__pb2.modelinfo.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
      'SetDAG': grpc.unary_unary_rpc_method_handler(
          servicer.SetDAG,
          request_deserializer=prediction__pb2.dag.FromString,
          response_serializer=model__pb2.response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'prediction.ProxyServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
